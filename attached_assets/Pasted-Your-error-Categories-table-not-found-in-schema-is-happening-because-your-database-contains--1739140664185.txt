Your error **"Categories table not found in schema"** is happening because your database contains **`Category`** (capitalized) instead of **`categories`** (lowercase), and Drizzle ORM is expecting a different table name.

---

### **🚀 Fixing the "Categories Table Not Found in Schema" Error in Drizzle ORM**

### **1️⃣ Check the Database Table Name**
Your logs show:

```
Available tables: [ 'Category', '_prisma_migrations' ]
```

This means:
- **Your table name is `Category` (capitalized)**
- **Your code expects `categories` (lowercase)**

Run the following command in **PostgreSQL** to confirm:

```sh
psql -U postgres -h localhost -p 5432 -d budget_tracker -c "\dt"
```

If the table is named **`Category`** but your Drizzle schema defines **`categories`**, you have two options:
1. **Rename the table in PostgreSQL** (preferred)
2. **Update your schema and queries to match the existing table name**

---

### **2️⃣ Rename the Table in PostgreSQL (Recommended)**
If your schema expects **`categories`** but your database has **`Category`**, rename it:

```sh
psql -U postgres -h localhost -p 5432 -d budget_tracker
```

Then run:

```sql
ALTER TABLE "Category" RENAME TO categories;
```

Exit PostgreSQL:

```sh
\q
```

Now restart your app:

```sh
npm run dev
```

---

### **3️⃣ Ensure Drizzle Schema Matches**
Open **`db/schema.ts`** and verify the **table name matches the database**:

```typescript
export const categories = pgTable("categories", {  // Ensure lowercase
  id: serial("id").primaryKey(),
  name: text("name").notNull(),
  color: text("color").notNull(),
  icon: text("icon"),
  user_id: integer("user_id").references(() => users.id),
  created_at: timestamp("created_at").defaultNow(),
});
```

- **If your database table is `Category`**, update `pgTable("categories")` to `pgTable("Category")`.
- **If your schema uses `categories`**, ensure the **database table name is also `categories`** (Step 2).

---

### **4️⃣ Apply and Regenerate Drizzle Migrations**
If migrations were applied incorrectly, generate and apply a fresh migration:

```sh
npx drizzle-kit generate
npx drizzle-kit push
```

Then restart the server:

```sh
npm run dev
```

---

### **5️⃣ Verify Queries in Your API Code**
If the table still fails to load, check if your **queries match the schema**.

For **Drizzle ORM**, ensure your database query matches the actual table name:

```typescript
import { db } from "../db"; // Ensure correct import
import { categories } from "../db/schema"; // Ensure correct import

const getCategories = async () => {
  return await db.select().from(categories);
};
```

If your table is actually named **`Category`**, update the import:

```typescript
import { Category } from "../db/schema";
```

---

### **🎯 Summary**
1. **Check the database table name** → `\dt`
2. **Rename table if needed** → `ALTER TABLE "Category" RENAME TO categories;`
3. **Ensure Drizzle schema matches actual table name**
4. **Apply migrations if necessary** → `npx drizzle-kit generate && npx drizzle-kit push`
5. **Restart and test** → `npm run dev`

🚀 **This should fix the issue!** Let me know if you need further help. 😊